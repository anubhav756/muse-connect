// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditableLabel /> changes value correctly 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> changes value correctly 2`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel-edit"
              id="inputEditableLabel-0"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyUp={[Function]}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> changes value correctly 3`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel-edit"
              id="inputEditableLabel-0"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyUp={[Function]}
              type="text"
              value="test new value"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> errors correctly without onChange 1`] = `
<Connect(EditableLabel)
  tabIndex="0"
  title="test title"
  value="test value"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel={null}
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={null}
    style={null}
    tabIndex="0"
    title="test title"
    type="text"
    validation={[Function]}
    value="test value"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        />
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> fires on keyup event with keycode 13 correctly 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> fires on keyup event with keycode 13 correctly 2`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel-edit"
              id="inputEditableLabel-0"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyUp={[Function]}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> fires on keyup event with keycode 13 correctly 3`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> fires on keyup event with keycode 14 correctly 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> fires on keyup event with keycode 14 correctly 2`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel-edit"
              id="inputEditableLabel-0"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyUp={[Function]}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> fires on keyup event with keycode 14 correctly 3`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel-edit"
              id="inputEditableLabel-0"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyUp={[Function]}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly 1`] = `
<Connect(EditableLabel)
  onChange={[Function]}
  tabIndex="0"
  title="test title"
  value="test value"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel={null}
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title"
    type="text"
    validation={[Function]}
    value="test value"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        />
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly in mobile view 1`] = `
<Connect(EditableLabel)
  editLabel={
    Array [
      "test edit label 1",
      "test edit label 2",
    ]
  }
  iconNames={
    Array [
      "add-icon",
    ]
  }
  onChange={[Function]}
  tabIndex="0"
  title={
    Array [
      "test title 1",
      "test title 2",
    ]
  }
  value={
    Array [
      "test value 1",
      "test value 2",
    ]
  }
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel={
      Array [
        "test edit label 1",
        "test edit label 2",
      ]
    }
    extraLabel={null}
    iconNames={
      Array [
        "add-icon",
      ]
    }
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title={
      Array [
        "test title 1",
        "test title 2",
      ]
    }
    type="text"
    validation={[Function]}
    value={
      Array [
        "test value 1",
        "test value 2",
      ]
    }
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 320,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={0}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": undefined,
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            key="test edit label 1"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={undefined}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "display": "inline-block",
                "marginRight": 20,
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "display": "inline-block",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "marginRight": 20,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "marginRight": 20,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <Icon
                    fill={undefined}
                    name="add-icon"
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <SvgIcon
                      fill={undefined}
                      name="add-icon"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                      viewBox="0 0 14 14"
                    >
                      <svg
                        fill={undefined}
                        name="add-icon"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "display": "inline-block",
                            "fill": "currentColor",
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "muiPrepared": true,
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                            "width": 15,
                          }
                        }
                        viewBox="0 0 14 14"
                      >
                        <polygon
                          fill="#FFFFFF"
                          fillRule="evenodd"
                          points="14 8 8 8 8 14 6 14 6 8 0 8 0 6 6 6 6 0 8 0 8 6 14 6"
                        />
                      </svg>
                    </SvgIcon>
                  </Icon>
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            key="test edit label 2"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={undefined}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "display": "inline-block",
                "marginRight": 0,
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "display": "inline-block",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "marginRight": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "marginRight": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": undefined,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": undefined,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": undefined,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": undefined,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": undefined,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": undefined,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": undefined,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": undefined,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div
            className="LabelTitleContainerEditableLabel"
            key="0"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 1
            </div>
          </div>
          <div
            className="LabelTitleContainerEditableLabel"
            key="1"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 2
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 2
            </div>
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
        <Divider
          inset={false}
          style={
            Object {
              "background": undefined,
              "marginBottom": -30,
              "marginLeft": -30,
              "marginRight": -30,
              "marginTop": 30,
            }
          }
        >
          <hr
            style={
              Object {
                "background": undefined,
                "backgroundColor": "#e0e0e0",
                "border": "none",
                "height": 1,
                "margin": 0,
                "marginBottom": -30,
                "marginLeft": -30,
                "marginRight": -30,
                "marginTop": 30,
                "muiPrepared": true,
              }
            }
          />
        </Divider>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly while loading 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label"
  loading={true}
  onChange={[Function]}
  tabIndex="0"
  title="test title"
  value="test value"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={true}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title"
    type="text"
    validation={[Function]}
    value="test value"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex={null}
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex={null}
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={
                    Object {
                      "color": undefined,
                    }
                  }
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={
                Object {
                  "color": undefined,
                }
              }
              type="text"
              value="test value"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly with a extra label 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label"
  extraLabel="test extra label"
  onChange={[Function]}
  tabIndex="0"
  title="test title"
  value="test value"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label"
    extraLabel="test extra label"
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title"
    type="text"
    validation={[Function]}
    value="test value"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <div
            className="ExtraLabelEditableLabel"
            style={null}
          >
            test extra label
          </div>
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly with a extra label and loading 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label"
  extraLabel="test extra label"
  loading={true}
  onChange={[Function]}
  tabIndex="0"
  title="test title"
  value="test value"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label"
    extraLabel="test extra label"
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={true}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title"
    type="text"
    validation={[Function]}
    value="test value"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex={null}
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex={null}
      >
        <div
          className="RightContainerEditableLabel"
        >
          <div
            className="ExtraLabelEditableLabel"
            style={
              Object {
                "color": undefined,
              }
            }
          >
            test extra label
          </div>
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={
                    Object {
                      "color": undefined,
                    }
                  }
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={
                Object {
                  "color": undefined,
                }
              }
              type="text"
              value="test value"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly with a valid edit label 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label"
  onChange={[Function]}
  tabIndex="0"
  title="test title"
  value="test value"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title"
    type="text"
    validation={[Function]}
    value="test value"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly with loading and multiple values 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label"
  iconNames={
    Array [
      "add-icon",
    ]
  }
  loading={true}
  onChange={[Function]}
  tabIndex="0"
  title={
    Array [
      "test title 1",
      "test title 2",
    ]
  }
  value={
    Array [
      "test value 1",
      "test value 2",
    ]
  }
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label"
    extraLabel={null}
    iconNames={
      Array [
        "add-icon",
      ]
    }
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={true}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title={
      Array [
        "test title 1",
        "test title 2",
      ]
    }
    type="text"
    validation={[Function]}
    value={
      Array [
        "test value 1",
        "test value 2",
      ]
    }
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex={null}
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex={null}
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={
                    Object {
                      "color": undefined,
                    }
                  }
                >
                  <Icon
                    fill={undefined}
                    name="add-icon"
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <SvgIcon
                      fill={undefined}
                      name="add-icon"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                      viewBox="0 0 14 14"
                    >
                      <svg
                        fill={undefined}
                        name="add-icon"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "display": "inline-block",
                            "fill": "currentColor",
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "muiPrepared": true,
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                            "width": 15,
                          }
                        }
                        viewBox="0 0 14 14"
                      >
                        <polygon
                          fill="#FFFFFF"
                          fillRule="evenodd"
                          points="14 8 8 8 8 14 6 14 6 8 0 8 0 6 6 6 6 0 8 0 8 6 14 6"
                        />
                      </svg>
                    </SvgIcon>
                  </Icon>
                  test edit label
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div
            className="LabelTitleContainerEditableLabel"
            key="0"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 1
            </div>
          </div>
          <div
            className="LabelTitleContainerEditableLabel"
            key="1"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 2
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 2
            </div>
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly with multiple edit labels and multiple values 1`] = `
<Connect(EditableLabel)
  editLabel={
    Array [
      "test edit label 1",
      "test edit label 2",
    ]
  }
  iconNames={
    Array [
      "add-icon",
    ]
  }
  onChange={[Function]}
  tabIndex="0"
  title={
    Array [
      "test title 1",
      "test title 2",
    ]
  }
  value={
    Array [
      "test value 1",
      "test value 2",
    ]
  }
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel={
      Array [
        "test edit label 1",
        "test edit label 2",
      ]
    }
    extraLabel={null}
    iconNames={
      Array [
        "add-icon",
      ]
    }
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title={
      Array [
        "test title 1",
        "test title 2",
      ]
    }
    type="text"
    validation={[Function]}
    value={
      Array [
        "test value 1",
        "test value 2",
      ]
    }
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            key="test edit label 1"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={undefined}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "display": "inline-block",
                "marginRight": 40,
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "display": "inline-block",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "marginRight": 40,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "marginRight": 40,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <Icon
                    fill={undefined}
                    name="add-icon"
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <SvgIcon
                      fill={undefined}
                      name="add-icon"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                      viewBox="0 0 14 14"
                    >
                      <svg
                        fill={undefined}
                        name="add-icon"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "display": "inline-block",
                            "fill": "currentColor",
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "muiPrepared": true,
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                            "width": 15,
                          }
                        }
                        viewBox="0 0 14 14"
                      >
                        <polygon
                          fill="#FFFFFF"
                          fillRule="evenodd"
                          points="14 8 8 8 8 14 6 14 6 8 0 8 0 6 6 6 6 0 8 0 8 6 14 6"
                        />
                      </svg>
                    </SvgIcon>
                  </Icon>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            key="test edit label 2"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={undefined}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "display": "inline-block",
                "marginRight": 0,
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "display": "inline-block",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "marginRight": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "marginRight": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": undefined,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": undefined,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": undefined,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": undefined,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": undefined,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": undefined,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": undefined,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": undefined,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 2
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div
            className="LabelTitleContainerEditableLabel"
            key="0"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 1
            </div>
          </div>
          <div
            className="LabelTitleContainerEditableLabel"
            key="1"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 2
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 2
            </div>
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly with multiple edit labels and multiple values and loading 1`] = `
<Connect(EditableLabel)
  editLabel={
    Array [
      "test edit label 1",
      "test edit label 2",
    ]
  }
  iconNames={
    Array [
      "add-icon",
    ]
  }
  loading={true}
  onChange={[Function]}
  tabIndex="0"
  title={
    Array [
      "test title 1",
      "test title 2",
    ]
  }
  value={
    Array [
      "test value 1",
      "test value 2",
    ]
  }
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel={
      Array [
        "test edit label 1",
        "test edit label 2",
      ]
    }
    extraLabel={null}
    iconNames={
      Array [
        "add-icon",
      ]
    }
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={true}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title={
      Array [
        "test title 1",
        "test title 2",
      ]
    }
    type="text"
    validation={[Function]}
    value={
      Array [
        "test value 1",
        "test value 2",
      ]
    }
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex={null}
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex={null}
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            key="test edit label 1"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={undefined}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "display": "inline-block",
                "marginRight": 40,
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "display": "inline-block",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "marginRight": 40,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "marginRight": 40,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={
                    Object {
                      "color": undefined,
                    }
                  }
                >
                  <Icon
                    fill={undefined}
                    name="add-icon"
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <SvgIcon
                      fill={undefined}
                      name="add-icon"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                      viewBox="0 0 14 14"
                    >
                      <svg
                        fill={undefined}
                        name="add-icon"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "display": "inline-block",
                            "fill": "currentColor",
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "muiPrepared": true,
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                            "width": 15,
                          }
                        }
                        viewBox="0 0 14 14"
                      >
                        <polygon
                          fill="#FFFFFF"
                          fillRule="evenodd"
                          points="14 8 8 8 8 14 6 14 6 8 0 8 0 6 6 6 6 0 8 0 8 6 14 6"
                        />
                      </svg>
                    </SvgIcon>
                  </Icon>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            key="test edit label 2"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={undefined}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "display": "inline-block",
                "marginRight": 0,
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "display": "inline-block",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "marginRight": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "marginRight": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={
                    Object {
                      "color": undefined,
                    }
                  }
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": undefined,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": undefined,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": undefined,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": undefined,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": undefined,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": undefined,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": undefined,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": undefined,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 2
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div
            className="LabelTitleContainerEditableLabel"
            key="0"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 1
            </div>
          </div>
          <div
            className="LabelTitleContainerEditableLabel"
            key="1"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 2
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 2
            </div>
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly with multiple values 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label"
  iconNames={
    Array [
      "add-icon",
    ]
  }
  onChange={[Function]}
  tabIndex="0"
  title={
    Array [
      "test title 1",
      "test title 2",
    ]
  }
  value={
    Array [
      "test value 1",
      "test value 2",
    ]
  }
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label"
    extraLabel={null}
    iconNames={
      Array [
        "add-icon",
      ]
    }
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title={
      Array [
        "test title 1",
        "test title 2",
      ]
    }
    type="text"
    validation={[Function]}
    value={
      Array [
        "test value 1",
        "test value 2",
      ]
    }
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <Icon
                    fill={undefined}
                    name="add-icon"
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <SvgIcon
                      fill={undefined}
                      name="add-icon"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                      viewBox="0 0 14 14"
                    >
                      <svg
                        fill={undefined}
                        name="add-icon"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "display": "inline-block",
                            "fill": "currentColor",
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "muiPrepared": true,
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                            "width": 15,
                          }
                        }
                        viewBox="0 0 14 14"
                      >
                        <polygon
                          fill="#FFFFFF"
                          fillRule="evenodd"
                          points="14 8 8 8 8 14 6 14 6 8 0 8 0 6 6 6 6 0 8 0 8 6 14 6"
                        />
                      </svg>
                    </SvgIcon>
                  </Icon>
                  test edit label
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div
            className="LabelTitleContainerEditableLabel"
            key="0"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 1
            </div>
          </div>
          <div
            className="LabelTitleContainerEditableLabel"
            key="1"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 2
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 2
            </div>
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> renders correctly with vertical buttons 1`] = `
<Connect(EditableLabel)
  editLabel={
    Array [
      "test edit label 1",
      "test edit label 2",
    ]
  }
  iconNames={
    Array [
      "add-icon",
    ]
  }
  onChange={[Function]}
  tabIndex="0"
  title={
    Array [
      "test title 1",
      "test title 2",
    ]
  }
  value={
    Array [
      "test value 1",
      "test value 2",
    ]
  }
  verticalButtons={true}
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel={
      Array [
        "test edit label 1",
        "test edit label 2",
      ]
    }
    extraLabel={null}
    iconNames={
      Array [
        "add-icon",
      ]
    }
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title={
      Array [
        "test title 1",
        "test title 2",
      ]
    }
    type="text"
    validation={[Function]}
    value={
      Array [
        "test value 1",
        "test value 2",
      ]
    }
    verticalButtons={true}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightMultiContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            key="test edit label 1"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={undefined}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "display": "block",
                "marginRight": 40,
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "display": "block",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "marginRight": 40,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "marginRight": 40,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <Icon
                    fill={undefined}
                    name="add-icon"
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <SvgIcon
                      fill={undefined}
                      name="add-icon"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                      viewBox="0 0 14 14"
                    >
                      <svg
                        fill={undefined}
                        name="add-icon"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "display": "inline-block",
                            "fill": "currentColor",
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "muiPrepared": true,
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                            "width": 15,
                          }
                        }
                        viewBox="0 0 14 14"
                      >
                        <polygon
                          fill="#FFFFFF"
                          fillRule="evenodd"
                          points="14 8 8 8 8 14 6 14 6 8 0 8 0 6 6 6 6 0 8 0 8 6 14 6"
                        />
                      </svg>
                    </SvgIcon>
                  </Icon>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            key="test edit label 2"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={undefined}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "display": "block",
                "marginRight": 0,
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "display": "block",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "marginRight": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "marginRight": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": undefined,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": undefined,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": undefined,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": undefined,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": undefined,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": undefined,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": undefined,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": undefined,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 2
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div
            className="LabelTitleContainerEditableLabel"
            key="0"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 1
            </div>
          </div>
          <div
            className="LabelTitleContainerEditableLabel"
            key="1"
          >
            <div
              className="LabelEditableLabel"
            >
              test title 2
            </div>
            <div
              className="InputEditableLabel"
              style={
                Object {
                  "labelStyle": null,
                }
              }
            >
              test value 2
            </div>
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles and untoggles editmode correctly 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles and untoggles editmode correctly 2`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel-edit"
              id="inputEditableLabel-0"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyUp={[Function]}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles and untoggles editmode correctly 3`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles and untoggles editmode correctly in mobile view 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 320,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={0}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": undefined,
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
        <Divider
          inset={false}
          style={
            Object {
              "background": undefined,
              "marginBottom": -30,
              "marginLeft": -30,
              "marginRight": -30,
              "marginTop": 30,
            }
          }
        >
          <hr
            style={
              Object {
                "background": undefined,
                "backgroundColor": "#e0e0e0",
                "border": "none",
                "height": 1,
                "margin": 0,
                "marginBottom": -30,
                "marginLeft": -30,
                "marginRight": -30,
                "marginTop": 30,
                "muiPrepared": true,
              }
            }
          />
        </Divider>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles and untoggles editmode correctly in mobile view 2`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 320,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={0}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": undefined,
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel-edit"
              id="inputEditableLabel-0"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyUp={[Function]}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
        <Divider
          inset={false}
          style={
            Object {
              "background": undefined,
              "marginBottom": -30,
              "marginLeft": -30,
              "marginRight": -30,
              "marginTop": 55,
            }
          }
        >
          <hr
            style={
              Object {
                "background": undefined,
                "backgroundColor": "#e0e0e0",
                "border": "none",
                "height": 1,
                "margin": 0,
                "marginBottom": -30,
                "marginLeft": -30,
                "marginRight": -30,
                "marginTop": 55,
                "muiPrepared": true,
              }
            }
          />
        </Divider>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles and untoggles editmode correctly in mobile view 3`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 320,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={0}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": undefined,
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
        <Divider
          inset={false}
          style={
            Object {
              "background": undefined,
              "marginBottom": -30,
              "marginLeft": -30,
              "marginRight": -30,
              "marginTop": 30,
            }
          }
        >
          <hr
            style={
              Object {
                "background": undefined,
                "backgroundColor": "#e0e0e0",
                "border": "none",
                "height": 1,
                "margin": 0,
                "marginBottom": -30,
                "marginLeft": -30,
                "marginRight": -30,
                "marginTop": 30,
                "muiPrepared": true,
              }
            }
          />
        </Divider>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles editmode on focus correctly 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles editmode on focus correctly 2`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={false}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles editmode on focus correctly in label only mode 1`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  labelOnly={true}
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={true}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;

exports[`<EditableLabel /> toggles editmode on focus correctly in label only mode 2`] = `
<Connect(EditableLabel)
  editLabel="test edit label 1"
  labelOnly={true}
  onChange={[Function]}
  tabIndex="0"
  title="test title 1"
  value="test value 1"
>
  <EditableLabel
    dispatch={[Function]}
    editClick={[Function]}
    editLabel="test edit label 1"
    extraLabel={null}
    iconNames={null}
    iconSizes={
      Array [
        15,
      ]
    }
    labelOnly={true}
    labelStyle={null}
    loading={false}
    onChange={[Function]}
    style={null}
    tabIndex="0"
    title="test title 1"
    type="text"
    validation={[Function]}
    value="test value 1"
    verticalButtons={false}
    wd={
      Object {
        "innerWidth": 1200,
      }
    }
  >
    <Paper
      circle={false}
      className={undefined}
      id="containerEditableLabel-0"
      onFocus={[Function]}
      rounded={false}
      style={
        Object {
          "backgroundColor": "white",
          "minHeight": 103,
          "outline": "none",
          "padding": 30,
          "position": "relative",
        }
      }
      tabIndex="0"
      transitionEnabled={true}
      zDepth={1}
    >
      <div
        className={undefined}
        id="containerEditableLabel-0"
        onFocus={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "white",
            "borderRadius": "0px",
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "Roboto, sans-serif",
            "minHeight": 103,
            "muiPrepared": true,
            "outline": "none",
            "padding": 30,
            "position": "relative",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
        tabIndex="0"
      >
        <div
          className="RightContainerEditableLabel"
        >
          <FlatButton
            disableTouchRipple={true}
            disabled={false}
            fullWidth={false}
            hoverColor="transparent"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
            style={
              Object {
                "minWidth": 40,
              }
            }
          >
            <EnhancedButton
              containerElement="button"
              disableTouchRipple={true}
              disabled={false}
              focusRippleColor="#999999"
              focusRippleOpacity={0.3}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0)",
                  "borderRadius": 2,
                  "color": "rgba(0, 0, 0, 0.87)",
                  "height": 36,
                  "lineHeight": "36px",
                  "margin": 0,
                  "minWidth": 40,
                  "overflow": "hidden",
                  "padding": 0,
                  "textAlign": "center",
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "userSelect": "none",
                }
              }
              tabIndex={0}
              touchRippleColor="#999999"
              touchRippleOpacity={0.3}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "minWidth": 40,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <div
                  className="LabelEditableLabel"
                  style={null}
                >
                  <EditorModeEdit
                    color={undefined}
                    style={
                      Object {
                        "height": 15,
                        "marginBottom": -3,
                        "marginRight": 10,
                        "width": 15,
                      }
                    }
                  >
                    <EditorModeEdit
                      color={undefined}
                      style={
                        Object {
                          "height": 15,
                          "marginBottom": -3,
                          "marginRight": 10,
                          "width": 15,
                        }
                      }
                    >
                      <SvgIcon
                        color={undefined}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "height": 15,
                            "marginBottom": -3,
                            "marginRight": 10,
                            "width": 15,
                          }
                        }
                        viewBox="0 0 24 24"
                      >
                        <svg
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fill": "currentColor",
                              "height": 15,
                              "marginBottom": -3,
                              "marginRight": 10,
                              "muiPrepared": true,
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "width": 15,
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                          />
                        </svg>
                      </SvgIcon>
                    </EditorModeEdit>
                  </EditorModeEdit>
                  test edit label 1
                </div>
              </button>
            </EnhancedButton>
          </FlatButton>
        </div>
        <div
          className="LeftContainerEditableLabel"
        >
          <div>
            <div
              className="LabelEditableLabel"
            >
              test title 1
            </div>
            <input
              className="InputEditableLabel"
              disabled={true}
              style={Object {}}
              type="text"
              value="test value 1"
            />
          </div>
          <div
            style={
              Object {
                "bottom": "10px",
                "color": undefined,
                "fontSize": "14px",
                "position": "absolute",
                "zIndex": 0,
              }
            }
          />
        </div>
      </div>
    </Paper>
  </EditableLabel>
</Connect(EditableLabel)>
`;
